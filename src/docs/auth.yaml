tags:
  - name: Auth
    description: API to manage the authentication.
paths:
  /api/auth/organization/signup:
    post:
      tags:
        - Auth
      summary: Signup a new organization
      description: Signup a new organization
      operationId: signup
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Organization"
            encoding:
              categories:
                style: form
                explode: true
      responses:
        200:
          description: User successfully signed up, a verification email sent, if an image is provided, the image will be uploaded, and an auth_token will be returned in a cookie.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User successfully signed up and a verification email sent
        400:
          description: This status is returned if the email is already in use.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email already used
        422:
          description: This status is returned when the request is missing required fields or has an invalid values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        500:
          description: Internal server error
  /api/auth/user/signup:
    post:
      tags:
        - Auth
      summary: Signup a new user
      description: Signup a new user
      operationId: signup
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/User"
            encoding:
              preferredCities:
                style: form
                explode: true
              interests:
                style: form
                explode: true
      responses:
        200:
          description: User successfully signed up, a verification email sent, if an image is provided, the image will be uploaded, and an auth_token will be returned in a cookie.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User successfully signed up and a verification email sent
        400:
          description: This status is returned if the email is already in use.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email already used
        422:
          description: This status is returned when the request is missing required fields or has an invalid values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        500:
          description: Internal server error
  /api/auth/signin: 
    post:
      tags:
        - Auth
      summary: Signin a user
      description: Signin a user
      operationId: signin
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: test@gmail.com
                password:
                  type: string
                  format: password
                  example: 12341234
      responses:
        400: 
          description: This status is returned if the email or password is incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid email or password
        200:
          description: User successfully signed in, an auth_token will be returned in a cookie.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User successfully signed in
                  warning:
                    type: string
                    example: User not verified
                    defult: undefined
        422:
          description: This status is returned when the request is missing required fields or has an invalid values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        500:
          description: Internal server error
  /api/auth/verify/:id/:token: 
    get:
      tags:
        - Auth
      summary: Verify a user
      description: Verify a user. This endpoint is used to verify a user after he/she has received an email with a verification link. You don't need to use this endpoint directly.
      operationId: verify
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
            example: 62e862abc73f97e241b83c1f
        - name: token
          in: path
          description: Token
          required: true
          schema:
            type: string
            example: 504ec1e3299c4a2a90a611cfff7be8bf938f86c38828641e1c489358ea9a18c7
      responses:
        200:
          description: User successfully verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User verified
        400:
          description: This status is returned if no user is found with the given id or token, or the user is already verified.
          content:
            application/json:
              schema:
                type: object
                description: this message is returned if the given id or token is invalid.
                properties:
                  message:
                    type: string
        422:
          description: This status is returned when the request is missing required fields or has an invalid values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        500:
          description: Internal server error
  /api/auth/signout: 
    get:
      tags:
        - Auth
      summary: Signout a user
      description: Signout a user
      operationId: signout
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - auth_cookie: []
      responses:
        200:
          description: User successfully signed out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User signed out
        401:
          description: This status is returned if the user is not signed in.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Invalid Token: No authorization token was found"
        500:
          description: Internal server error
components:
  schemas:
    Organization:
      type: object
      required:
        - email
        - password
        - description
        - name
        - city
      properties:
        email:
          type: string
          format: email
          example: test@gmail.com
        password:
          type: string
          format: password
          example: 12341234
        description:
          type: string
          example: This is a test organization
        name:
          type: string
          example: Test Organization
        city:
          type: string
          enum:
            - Adana
            - Kocaeli
            - Adiyaman
            - Konya
            - Afyonkarahisar
            - Kutahya
            - Agri
            - Malatya
            - Amasya
            - Manisa
            - Ankara
            - Kahramanmaras
            - Antalya
            - Mardin
            - Artviin
            - Mugla
            - Aydin
            - Mus
            - Balikesir
            - Nevsehir
            - Bilecik
            - Nigde
            - Bingol
            - Ordu
            - Bitlis
            - Rize
            - Bolu
            - Sakarya
            - Burdur
            - Samsun
            - Bursa
            - Siirt
            - Canakkale
            - Sinop
            - Cankiri
            - Sivas
            - Corum
            - Tekirdag
            - Denizli
            - Tokat
            - Diyarbakir
            - Trabzon
            - Edirne
            - Tunceli
            - Elazig
            - Sanliurfa
            - Erzincan
            - Usak
            - Erzurum
            - Van
            - Eskisehir
            - Yozgat
            - Gaziantep
            - Zonguldak
            - Giresun
            - Aksaray
            - Gumushane
            - Bayburt
            - Hakkari
            - Karaman
            - Hatay
            - Kirikkale
            - Isparta
            - Batman
            - Mersin
            - Sirnak
            - Istanbul
            - Bartin
            - Izmir
            - Ardahan
            - Kars
            - Igdir
            - Kastamonu
            - Yalova
            - Kayseri
            - Karabuk
            - Kirklareli
            - Kilis
            - Kirsehir
            - Osmaniye
            - Duzce
          example: Adana
        categories:
          type: array
          items:
            type: string
            enum:
              - No Poverty
              - Zero Hunger
              - Good Health And Well-Being
              - Quality Education
              - Gender Equality
              - Clean Water And Sanitation
              - Affordable And Clean Energy
              - Animals
              - Oceans
              - Nature
              - Reduced Inequalities
              - Sustainable Cities And Communities
              - Responsible Consumption And Production
              - Climate Action
              - Life Below Water
              - Life On Land
              - Peace
              - Youth
              - Justice
          example: [No Poverty, Zero Hunger]
        websiteUrl:
          type: string
          format: url
          example: https://www.test.com
        coverImage:
          type: string
          format: binary
    ValidationError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                example: an invalid value
              msg:
                type: string
                example: a message explaining the error
              param:
                type: string
                example: the parameter name that caused the error
              location:
                type: string
                example: the location of the error whether it be a path, query, or body
    User:
      type: object
      required:
        - email
        - password
        - firstName
        - lastName
        - dateOfBirth
        - gender
      properties:
        email:
          type: string
          format: email
          example: test@gmail.com
        password:
          type: string
          format: password
          example: 12341234
        firstName:
          type: string
          example: Sara
        lastName:
          type: string
          example: Smith
        dateOfBirth:
          type: string
          format: date
          example: 2000-01-01
        gender:
          type: string
          enum:
            - male
            - female
            - other
          example: female
        preferredCities:
          type: array
          items:
            type: string
            enum:
              - Adana
              - Kocaeli
              - Adiyaman
              - Konya
              - Afyonkarahisar
              - Kutahya
              - Agri
              - Malatya
              - Amasya
              - Manisa
              - Ankara
              - Kahramanmaras
              - Antalya
              - Mardin
              - Artviin
              - Mugla
              - Aydin
              - Mus
              - Balikesir
              - Nevsehir
              - Bilecik
              - Nigde
              - Bingol
              - Ordu
              - Bitlis
              - Rize
              - Bolu
              - Sakarya
              - Burdur
              - Samsun
              - Bursa
              - Siirt
              - Canakkale
              - Sinop
              - Cankiri
              - Sivas
              - Corum
              - Tekirdag
              - Denizli
              - Tokat
              - Diyarbakir
              - Trabzon
              - Edirne
              - Tunceli
              - Elazig
              - Sanliurfa
              - Erzincan
              - Usak
              - Erzurum
              - Van
              - Eskisehir
              - Yozgat
              - Gaziantep
              - Zonguldak
              - Giresun
              - Aksaray
              - Gumushane
              - Bayburt
              - Hakkari
              - Karaman
              - Hatay
              - Kirikkale
              - Isparta
              - Batman
              - Mersin
              - Sirnak
              - Istanbul
              - Bartin
              - Izmir
              - Ardahan
              - Kars
              - Igdir
              - Kastamonu
              - Yalova
              - Kayseri
              - Karabuk
              - Kirklareli
              - Kilis
              - Kirsehir
              - Osmaniye
              - Duzce
          example: [Osmaniye, Duzce]
        interests:
          type: array
          items:
            type: string
            enum:
              - No Poverty
              - Zero Hunger
              - Good Health And Well-Being
              - Quality Education
              - Gender Equality
              - Clean Water And Sanitation
              - Affordable And Clean Energy
              - Animals
              - Oceans
              - Nature
              - Reduced Inequalities
              - Sustainable Cities And Communities
              - Responsible Consumption And Production
              - Climate Action
              - Life Below Water
              - Life On Land
              - Peace
              - Youth
              - Justice
          example: [No Poverty, Zero Hunger]
  securitySchemes: 
    auth_cookie: 
      type: apiKey
      in: cookie
      name: auth_token
